// https://youtu.be/cd2C_C3vllQ?list=PL0ZWCvQG2rJVLtmJM1vA1mhsrWVFZEFuy
// type casting
/* choti sy bari type me type conversion ki zaroorat nahi hoti, eg:
int x=10;
long l = x;
jab ham <l> me (jo k long type h) x <jo k int type h) dal rahy he to koi masla nahi ho ga, q k jo int me aa sakta h wo zaroor long me bhi aa sakta h, masla wahan hota h jahan ham bari type sy choti type me jaty hen, is lye k is me confirmation nahi hoti k bari type wala element choti type me bhi ja saky ga ya nahi, eg: 
long l = 100;
int x = l;
ab yahan masla h, zaroori nahi k <l> me jo bhi value ho wo <x> me bhi ja saky, Long ki possible range +-9,223,372,036,854,775,808 h, or int ki possible range 2,147,483,647, to kafi numbers esy hon gy jo long type me jaen gy magar int me nahi ja saken gy, to pehly to hame confirm karna h k kya bari type ka data choti type ki range me h ya nahi, agar nahi to type casting nahi ho sakti, or agar h to ham us ki type casting karen gy*/
// Double > Float > Long > int > Short > Bbyte > boolean
// Double : 8 bytes, Stores fractional numbers. Sufficient for storing 15 decimal digits
// float  : 4 bytes, Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits
// long   : 8 bytes, Stores whole numbers from -9223372036854775808 to 9223372036854775807
// int    : 4 bytes, Stores whole numbers from -2147483648 to 2147483647
// Short  : 2 bytes, Stores whole numbers from -32768 to 32767
// byte   : 1 byte , Stores whole numbers from -128 to 127
// boolean: 1 bit  , Stores true or false values
// char   :	2 bytes, Stores a single character/letter or ASCII values

public class Test{
	public static void main(String[] args){
		long l=100;
		// ab ham <x int type ka bana kar us me <l> ki value dalna chah rahy hen, to pehly to hame ye confirm karna h k <l> ki value <int> ki range me h ya nahi, agar h to phir type casting karen gy.
		if (l <= 2147483647 && l >= -2147483648){
			int x = (int)l;
			System.out.println(x);
		}
	}
}